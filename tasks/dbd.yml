---
  - name: slurm_mysql_password variable must be set
    assert:
      that: "slurm_mysql_password is defined"

####

  - name: install slurmdbd specific packages
    package: "name={{item}} state=present"
    register: reg_install_slurm_packages
    with_items: "{{ slurmdbd_packages }}"
    when: ansible_os_family == "RedHat"

  - name: set the sql root password
    mysql_user: user=root password={{ DB_root_password }} host=localhost
    when: ansible_os_family == "RedHat"

  - name: delete anonymous sql server user for localhost
    mysql_user: user="" state=absent
    when: ansible_os_family == "RedHat"

  - name: secure the sql root user for ipv6 localhost (::1)
    mysql_user: user="root" password="{{ DB_root_password }}" host="::1"
    when: ansible_os_family == "RedHat"

  - name: secure the sql root user for ipv4 localhost (127.0.0.1)
    mysql_user: user="root" password="{{ DB_root_password }}" host="127.0.0.1"
    when: ansible_os_family == "RedHat"

  - name: secure the sql root user for localhost domain (localhost)
    mysql_user: user="root" password="{{ DB_root_password }}" host="localhost"
    when: ansible_os_family == "RedHat"

  - name: remove the mysql test database
    mysql_db: db=test state=absent
    when: ansible_os_family == "RedHat"

  - name: start and enable mariadb/mysql
    service: name={{ slurm_sql_service }} state=started enabled=yes
    when: ansible_os_family == "RedHat"

  - name: restart mariadb/mysql after install
    service: name={{ slurm_sql_service }} state=restarted
    when: reg_install_slurm_packages.changed

  - name: wait for mysql in port 3306 to start
    wait_for: port=3306 delay=10 timeout=60

  - name: create slurm acct db
    mysql_db: name=slurm_acct_db state=present

  - name: create slurm sql user
    mysql_user: "name=slurm state=present"
    register: mysqlslurmuser
    ignore_errors: yes
    tags: debug

  - name: print mysqlslurmuser
    debug: var=mysqlslurmuser verbosity=1
    tags: debug
    changed_when: False

  - name: ensure slurm sql user has a password and privileges if it does not exist or if it was just added
    mysql_user: "name=slurm password={{ slurm_mysql_passwordÂ }} priv=slurm_acct_db.*:ALL state=present update_password=always"
    when: mysqlslurmuser|failed or mysqlslurmuser|changed

  - name: template in slurmdbd.conf
    template: src=slurmdbd.conf.j2 dest=/etc/slurm/slurmdbd.conf owner=root mode=0640 backup=yes
    notify:
      - restart slurmdbd

  - name: template in dump-all-databases.sh
    template: src=dump-all-databases.sh.j2 dest=/usr/local/sbin/dump-all-databases.sh owner=root mode=0750 backup=no
